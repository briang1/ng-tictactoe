<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>TIC TAC TOE</title>
    <meta name="viewport" media="screen only " content=" width=device-width, initial-scale=1">
    <meta name="description" content="A game by Nathan Goullette (9/18/15)">

    <style>
        #gameBoard {
            width: 640px;
            margin: 50px auto 0;
            text-align: right;
        }
        #gameBoard .row input {
            height: 200px;
            width: 200px;
            margin: 5px;
            font: 5em Arial;
            color: #fff;
            vertical-align: top;
            cursor: pointer;
            border: 0 outset buttonface;
        }
        .reset {
            margin: 5px 7px 0 0;
        }
        @media screen and (max-width: 320px) {
            #gameBoard {
                width: 280px;
                margin-top: 80px !important;
            }
        }
        @media screen and (max-width: 480px) {
            #gameBoard {
                width: 280px;
                margin-top: 10px;
            }
            #gameBoard .row input {
                height: 80px;
                width: 80px;
                font: 4em Arial;
            }
        }
    </style>
</head>
<body>

    <div id="gameBoard"></div>

    <script>

    var boardSquare = [];
    var x = "X";
    var o = "O";
    var current = [x, o];
    var turnCount = 0;

    function init(){
        /**
         * Initialize game by generating gameBoard markup.
         */

        var gameBoard = document.getElementById('gameBoard');
        for (var i = 0; i < 9; i++){

            // create a row div every 3 squares
            if (i % 3 == 0){
                var rowDiv = document.createElement('div');
                rowDiv.className = "row";
            }

            // create each game square, appending to row
            var spaceBtn = document.createElement('input');
            spaceBtn.type = "button";
            spaceBtn.value = "";
            spaceBtn.onclick = setSquare;
            boardSquare.push(spaceBtn);
            rowDiv.appendChild(spaceBtn);

            // append the row div to gameBoard after 3 squares added
            if (i % 3 == 0){
                gameBoard.appendChild(rowDiv);
            }
        }

        var restartBtn = document.createElement('input');
        restartBtn.type = "button";
        restartBtn.value = "RESTART";
        restartBtn.className = "reset";
        restartBtn.onclick = reStart;
        gameBoard.appendChild(restartBtn);
    }

    function setSquare() {
        /**
         * Player's turn: X/O. Later this could be three objects: current player that switches between player 1 and 2.
         * Also there could be a best out of n games/tournament style play mode.
         */

        var square = this;

        // Set the gamespace square to X, or O
        if (square.value == "") {
            square.value = current[turnCount % 2];
        }

        if (square.value == x, o) {
            square.disabled = true;
        }

        if (square.value == x) {
            square.style.backgroundColor = 'red';
        } else {
            square.style.backgroundColor = 'black';
        }

        turnCount++;

        // See if there's a winner
        var player = winner();

        if (player) {
            alert(player + ' is the winner!');
            reStart();
        } else {
            // Detect if the game is over, if true it's a tie game
            var foundEmptyTile = false;

            for (var i = 0; i < boardSquare.length; i++) {
                if (boardSquare[i].value == '') {
                    foundEmptyTile = true;
                    break;
                }
            }

            if (!foundEmptyTile) {
                alert('It\'s a Cat\'s game! There\'s no winner.');
                reStart();
            }
        }
    }

    function checkWinner(s1, s2, s3){
        var ret_val = null;
        if (boardSquare[s1].value == x && boardSquare[s2].value == x && boardSquare[s3].value == x) {
            ret_val = x;
        } else if (boardSquare[s1].value == o && boardSquare[s2].value == o && boardSquare[s3].value == o) {
            ret_val = o;
        }
        return ret_val;
    }

    function winner() {
        /**
         * Check to see if there's a winner and alert to convey who won.
         * Later this could be algorithmically determined using pathing like A* / Star.
         */

        var grid = [
            [0, 1, 2],  // Top Row
            [3, 4, 5],  // Mid Row
            [6, 7, 8],  // Btm Row
            [0, 3, 6],  // Left Col
            [1, 4, 7],  // Mid Col
            [2, 5, 8],  // Right Col
            [0, 4, 8],  // Right Diagonal
            [2, 4, 6]   // Left Diagonal
        ];
        var gridLength = grid.length;

        for (var i = 0; i < gridLength; i++){
            var val = checkWinner(grid[i][0], grid[i][1], grid[i][2]);
            if (val)
                return val;
        }

        return null;
    }

    // Reset/Start new game
    function reStart() {
        turnCount = 0;
        for (var i = 0; i < boardSquare.length; i++) {
            boardSquare[i].value = "";
            boardSquare[i].disabled = false;
            boardSquare[i].style.backgroundColor = 'buttonface';
        }
    }

    init();
    </script>
</body>
</html>